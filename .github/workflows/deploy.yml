name: Flask CI/CD to EC2

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
    - name: Lint
      run: |
        flake8 .
        black --check .
    - name: Test
      run: |
        pytest --cov=./ --cov-report=xml --junitxml=test-results.xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3
    - name: Test Summary
      run: |
        TOTAL_TESTS=$(grep -o 'tests="[0-9]*"' test-results.xml | grep -o '[0-9]*')
        PASSED_TESTS=$(grep -o 'failures="0"[^>]*errors="0"' test-results.xml | wc -l)
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "âœ… $PASSED_TESTS/$TOTAL_TESTS tests passed" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Deploy to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_SSH_KEY }}
        source: "./"
        target: "/home/ubuntu/flask-app"
    - name: Setup and Restart
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_SSH_KEY }}
        script: |
          sudo apt update -y
          sudo apt install -y python3 python3-pip
          cd /home/ubuntu/flask-app
          pip3 install -r requirements.txt
          sudo pkill -f gunicorn || true
          nohup gunicorn --bind 0.0.0.0:5000 wsgi:app > /dev/null 2>&1 &
    - name: Show URL
      run: |
        echo "Flask App URL: http://${{ secrets.AWS_EC2_HOST }}:5000"
        echo "::notice::Deployed to http://${{ secrets.AWS_EC2_HOST }}:5000"
